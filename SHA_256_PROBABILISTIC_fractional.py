#SHA-256 basic, last 3 operation functions altered to handle probabilities instead of binaries (0.56=56% chance of being 1, 44% change of being 0)
import json
import random
import copy

#main function, takes array of size 512 of fractions [x,y] == x/y
def hash(inp):
    input=copy.deepcopy(inp)
    print(input)
    
    K = [[[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1]],[[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1]],
         [[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1]],[[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1]],
         [[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1]],[[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1]],
         [[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1]],[[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1]],
         [[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1]],[[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1]],
         [[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1]],[[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1]],
         [[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1]],[[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1]],
         [[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1]],[[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1]],
         [[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1]],[[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1]],
         [[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1]],[[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1]],
         [[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1]],[[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1]],
         [[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1]],[[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1]],
         [[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1]],[[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1]],
         [[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1]],[[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1]],
         [[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1]],[[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1]],
         [[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1]],[[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1]],
         [[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1]],[[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1]],
         [[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1]],[[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1]],
         [[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1]],[[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1]],
         [[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1]],[[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1]],
         [[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1]],[[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1]],
         [[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1]],[[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1]],
         [[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1]],[[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1]],
         [[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1]],[[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1]],
         [[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1]],[[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1]],
         [[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1]],[[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1]],
         [[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1]],[[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1]],
         [[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1]],[[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1]],
         [[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1]],[[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1]],
         [[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1]],[[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1]],
         [[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1]],[[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1]],
         [[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1]],[[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1]]]

    h0 = [[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1]]
    h1 = [[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1]]
    h2 = [[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1]]
    h3 = [[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[1,1],[0,1]]
    h4 = [[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[0,1],[1,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1]]
    h5 = [[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1]]
    h6 = [[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[1,1],[1,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[1,1],[0,1],[1,1],[1,1]]
    h7 = [[0,1],[1,1],[0,1],[1,1],[1,1],[0,1],[1,1],[1,1],[1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1],[1,1],[0,1],[1,1],[0,1],[0,1],[0,1],[1,1],[1,1],[0,1],[0,1],[1,1]]


    # Prepare message schedule
    W = []
    for i in range(64):
        if i <= 15:
            W.append(input[i*32:(i*32)+32])
        else:
            s0=xor(xor(rightRotate(W[i-15],7),rightRotate(W[i-15],18)),rightShift(W[i-15],3))
            s1=xor(xor(rightRotate(W[i-2],17),rightRotate(W[i-2],19)),rightShift(W[i-2],10))
            W.append(plus(plus(plus(W[i-16],s0),W[i-7]),s1))
        print(i)
    a = copy.deepcopy(h0)
    b = copy.deepcopy(h1)
    c = copy.deepcopy(h2)
    d = copy.deepcopy(h3)
    e = copy.deepcopy(h4)
    f = copy.deepcopy(h5)
    g = copy.deepcopy(h6)
    h = copy.deepcopy(h7)

    for i in range(64):
        S1=xor(xor(rightRotate(e,6),rightRotate(e,11)),rightRotate(e,25))
        ch=xor(ander(e,f),ander(noter(e),g))
        temp1=plus(plus(plus(plus(h,S1),ch),K[i]),W[i])
        S0=xor(xor(rightRotate(a,2),rightRotate(a,13)),rightRotate(a,22))
        maj=xor(xor(ander(a,b),ander(a,c)),ander(b,c))
        temp2=plus(S0,maj) 
        h = copy.deepcopy(g)
        g = copy.deepcopy(f)
        f = copy.deepcopy(e)
        e = plus(d,temp1)
        d = copy.deepcopy(c)
        c = copy.deepcopy(b)
        b = copy.deepcopy(a)
        a = plus(temp1,temp2)
        print(i)

    h0 = plus(h0,a)
    h1 = plus(h1,b)
    h2 = plus(h2,c)
    h3 = plus(h3,d)
    h4 = plus(h4,e)
    h5 = plus(h5,f)
    h6 = plus(h6,g)
    h7 = plus(h7,h)
    return h0+h1+h2+h3+h4+h5+h6+h7
    
#basic rotation
def rightRotate(arr,dist):
    ret=[]
    for x in range (32):
        ret.append(copy.deepcopy(arr[(x-dist)%32]))
    return ret
    
#shift over, leave 0's in wake
def rightShift(arr,dist):
    ret=[[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1]]
    for x in range (dist,32):
        ret[x]=copy.deepcopy(arr[x-dist])
    return ret

#invert fraction
def invert(frac):
    return [frac[1]-frac[0],frac[1]]
    
#invert every value
def noter(arr):
    ret=[]
    for x in range (32):
        ret.append(invert(arr[x]))
    return ret
    
#apply probabilistic xor to every pair of bits
def xor(arr1,arr2):
    ret=[]
    for x in range (32):
        ret.append([arr1[x][0]*invert(arr2[x])[0])+(invert(arr1[x])[0]*arr2[x][0],arr1[x][1]*arr2[x][1]])
    return ret
    
#apply probabilistic and to every pair of bits
def ander(arr1,arr2):
    ret=[]
    for x in range (32):
        ret.append([arr1[x][0]*arr2[x][0],arr1[x][1]*arr2[x][1]])
    return ret
    
#binary probabilistic addition, discard overflow
def plus(arr1,arr2):
    ret=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    carry=[0,1]
    for x in range(31, -1, -1):
        P1=(carry[0]*invert(arr1[x])[0]*invert(arr2[x])[0])+(invert(carry)[0]*arr1[x][0]*invert(arr2[x])[0])+(invert(carry)[0]*invert(arr1[x])[0]*arr2[x][0])
        P2=(carry[0]*arr1[x][0]*invert(arr2[x])[0])+(carry[0]*invert(arr1[x])[0]*arr2[x][0])+(invert(carry)[0]*arr1[x][0]*arr2[x][0])
        P3=carry[0]*arr1[x][0]*arr2[x][0]
        denom=carry[1]*arr1[x][1]*arr2[x][1]
        ret[x] = [P1+P3,denom]
        carry = [P2+P3,denom]
    return ret
